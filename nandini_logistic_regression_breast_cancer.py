# -*- coding: utf-8 -*-
"""nandini logistic regression breast cancer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gz_WVos6SpNvTpCM6aRuyQItNtrsUcJi

# Logistic Regression

## Importing the libraries
"""

import numpy as np
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('breast-cancer-wisconsin (2).csv')
x = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

"""## Taking care of missing data"""

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.NaN, strategy='mean')
imputer.fit(x[:, 1:-1])
x[:, 1:-1] = imputer.transform(x[:, 1:-1])

np.where(np.isnan(x))

print(x)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)

"""## Training the Logistic Regression model on the Training set"""

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 0)
classifier.fit(x_train, y_train)

"""## Predicting the Test set results"""

y_pred = classifier.predict(x_test)

"""## Making the Confusion Matrix"""

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)

(83+53)/(83+2+2+53)

"""## Computing the accuracy with k-Fold Cross Validation"""

from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(estimator = classifier, X = x_train, y = y_train, cv = 10)
print("accuracy: {:.2f} %".format(accuracies.mean()*100))
print("Standard Deviation: {:.2f} %".format(accuracies.std()*100))